version: '2'
services:
  backend:
    container_name: training_backend
    image: training/backend:latest
    ports:
      - "8080:8080"
    env_file:
      - .env
    depends_on:
      - postgres
      - redis
      - kafka
    networks:
      - java-backend-services

  zookeeper:
    container_name: training_zookeeper
    image: bitnami/zookeeper
    restart: always
    ports:
      - "2181:2181"
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    volumes:
      - "zookeeper_data:/bitnami/zookeeper"
    networks:
      - java-backend-services

  kafka:
    container_name: training_kafka
    image: bitnami/kafka
    restart: always
    ports:
      - "9092:9092"
    environment:
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://localhost:9092
    volumes:
      - "kafka_data:/bitnami"
    depends_on:
      - zookeeper
    networks:
      - java-backend-services

  postgres:
    container_name: postgresql
    image: postgres
    hostname: postgresql
    restart: always
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=${DB_USERNAME}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=backend
    volumes:
      - "postgres_data:/var/lib/postgresql/data/"
    networks:
      - java-backend-services

  redis:
    container_name: training_redis
    image: redis
    restart: always
    ports:
      - "6379:6379"
    networks:
      - java-backend-services

networks:
  java-backend-services:
    driver: bridge

volumes:
  zookeeper_data:
    driver: local
  kafka_data:
    driver: local
  postgres_data:
    driver: local
